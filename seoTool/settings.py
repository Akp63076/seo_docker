"""
Django settings for seoTool project.

Generated by 'django-admin startproject' using Django 3.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
https://python-social-auth.readthedocs.io/en/latest/index.html
https://python-social-auth.readthedocs.io/en/latest/configuration/settings.html
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "q0g%b^s^fx4sj@qpd876-b4*$bj#zz0uthtnl#w+ew4m$-37eh"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["165.232.184.253", "127.0.0.1", "sacp.cdboards.in"]



# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django.contrib.sites",
    "redshiftClicks.apps.RedshiftclicksConfig",
    "coursefinder.apps.CoursefinderConfig",
    "web_analytics.apps.WebAnalyticsConfig",
    "ranking.apps.RankingConfig",
    "users.apps.UsersConfig",
    'dashboard',
    'rank_tool',
    'import_export',
    'django_celery_beat',
    'django_celery_results',
    "crispy_forms",
    "allauth",
    "allauth.account",
    "allauth.socialaccount",
    "allauth.socialaccount.providers.google",
    "social_django",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "social_django.middleware.SocialAuthExceptionMiddleware",  # python-social-auth
]

ROOT_URLCONF = "seoTool.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [str(BASE_DIR.joinpath("templates"))],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
                "social_django.context_processors.backends",  # <-- social-auth-app-django
                "social_django.context_processors.login_redirect",  # <-- social-auth-app-django
            ],
        },
    },
]

WSGI_APPLICATION = "seoTool.wsgi.application"
DATA_UPLOAD_MAX_NUMBER_FIELDS = 100000

# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql",
        "NAME": "postgres",
        "USER": "analyst",
        "PASSWORD": "12345",
        "HOST": "165.232.184.253",
        "PORT": "5432",
    }
    
}


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "Asia/Kolkata"

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = "/static/"
STATIC_ROOT = os.path.join(BASE_DIR, "static")
STATICFILES_DIRS = (
    # os.path.join(BASE_DIR, 'static'),
)

SITE_ID = 2
LOGIN_REDIRECT_URL = "redshiftClicks-index"
LOGOUT_REDIRECT_URL = "/"
LOGIN_URL = "login"
SOCIAL_AUTH_LOGIN_ERROR_URL = "/"
CRISPY_TEMPLATE_PACK = "bootstrap4"

# GOOGLE_OAUTH2_AUTH_EXTRA_ARGUMENTS = {'approval_prompt': 'force'}
SOCIAL_AUTH_GOOGLE_OAUTH2_KEY = (
    "734398090554-u1v8jio864e6aclaoe210vjl2i9rvhu7.apps.googleusercontent.com"
    #"56839959209-5huoubkun5t6j34sp8v79dgo46q8pj5a.apps.googleusercontent.com"
)
SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = "PM3SjP2_DnXM1lvxQJkFYEY3"
#"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",

# set django-allauth as the authentication backend
SOCIAL_AUTH_GOOGLE_OAUTH2_WHITELISTED_DOMAINS = ["collegedunia.com",'collegedunia.in']
SOCIAL_AUTH_GOOGLE_OAUTH2_WHITELISTED_EMAILS = [
    "mishra34rohini@gmail.com",
    "flcollegedunia@gmail.com",
]
SOCIAL_AUTH_GOOGLE_OAUTH2_AUTH_EXTRA_ARGUMENTS = {
    "access_type": "offline",
    "approval_prompt": "force",
}
AUTHENTICATION_BACKENDS = [
    "django.contrib.auth.backends.ModelBackend",
    "allauth.account.auth_backends.AuthenticationBackend",
    "social_core.backends.google.GoogleOAuth2",
    "social_core.backends.google.GoogleOAuth",
]
# set Google as the OAuth provider under SOCIALACCOUNT_PROVIDERS
SOCIALACCOUNT_PROVIDERS = {
    "google": {
        "SCOPE": [
            "profile",
            "email",
        ],
        "AUTH_PARAMS": {
            "access_type": "offline",
        },
    }
}
# SOCIAL_AUTH_PIPELINE = (
#     'social_core.pipeline.social_auth.social_details',
#     'social_core.pipeline.social_auth.social_uid',
#     'social_core.pipeline.social_auth.social_user',
#     'social_core.pipeline.user.get_username',
#     'social_core.pipeline.social_auth.associate_by_email',
#     'social_core.pipeline.user.create_user',
#     'social_core.pipeline.social_auth.associate_user',
#     'social_core.pipeline.social_auth.load_extra_data',
#     'social_core.pipeline.user.user_details',
# )
# CELERY STUFF
EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
EMAIL_USE_TLS = True
EMAIL_HOST = "smtp.gmail.com"
EMAIL_HOST_USER = "rohini.mishra@collegedunia.com" #"aashish.pandey@collegedunia.com" 
EMAIL_HOST_PASSWORD = "Rm@123456"
EMAIL_PORT = 587

BROKER_URL = "redis://localhost:6379"
CELERY_RESULT_BACKEND = "redis://localhost:6379"
CELERY_ACCEPT_CONTENT = ["application/json"]
CELERY_TASK_SERIALIZER = "json"
CELERY_RESULT_SERIALIZER = "json"
CELERY_TIMEZONE = "Asia/Kolkata"
CELERY_TASK_TRACK_STARTED = True


# logging
import os

LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    'formatters': {
        'file': {
            'format': '%(asctime)s %(pathname)s %(lineno)d  %(name)-5s %(levelname)-5s %(message)s'
               },
        },
    "handlers": {
        # "console": {
        #     "class": "logging.StreamHandler",
        # },
         'file': {
            'level': 'WARNING',
            'class': 'logging.FileHandler',
            'formatter': 'file',
            'filename':'warning.log',
            
        },
    },
    # "root": {
    #     "handlers": ["console"],
    #     "level": "WARNING",
    # },
    "loggers": {
        # "django": {
        #     "handlers": ["console"],
        #     "level": os.getenv("DJANGO_LOG_LEVEL", "INFO"),
        #     "propagate": False,
        # },
        'django': {
            'handlers': ['file'], #notice how file variable is called in handler which has been defined above
            'level': 'WARNING',
            'propagate': True,
        },
    },
}
